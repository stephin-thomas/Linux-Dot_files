# To enable floating windows or window assignments, open the application and then use the app_id, the class, the instance and the title attributes to enable floating windows/window assignments. The following command will list the properties of all the open windows.
# 
# $ swaymsg -t get_tree
# 
# To get only the app_id's of all open windows use:
# 
# $ swaymsg -t get_tree | grep "app_id"
# 
# To get the app_id of the focused window use:
# 
# $ swaymsg -t get_tree | jq -r '..|try select(.focused == true)'
# 
# If the app_id happens to be null for some windows, you might have to use the class and/or the instance attributes to enable floating mode/window assignments. You can search the output and create fine grained rules for your windows. 

for_window [app_id="galculator"] floating enable
for_window [app_id="htop"] floating enable
for_window [app_id="nmtui"] floating enable
for_window [app_id="qalculate"] floating enable
for_window [title="calendar"] floating enable
for_window [title="Bitwarden"] floating enable
assign [class="firefox"] -> 3
assign [class="^Urxvt$" instance="^htop$"] -> 9



#
# Screen capture
#
set $ps1 Print
set $ps2 $mod+Shift+s
set $psf $(xdg-user-dir PICTURES)/ps_$(date +"%Y%m%d%H%M%S").png
 
bindsym $ps1 exec grim $psf | wl-copy
bindsym $ps2 exec grim -g "$(slurp)" $psf | wl-copy 
